/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-06-10 07:54:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\" />\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("  <title>Student Management System - Dashboard</title>\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("  <style>\r\n");
      out.write("    body {\r\n");
      out.write("      background: #f8f9fa;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .hero {\r\n");
      out.write("      background: linear-gradient(135deg, #0d6efd, #6610f2);\r\n");
      out.write("      color: white;\r\n");
      out.write("      padding: 60px 0;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      border-radius: 0 0 20px 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .hero h1 {\r\n");
      out.write("      font-size: 3rem;\r\n");
      out.write("      font-weight: 700;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn-group-custom .btn {\r\n");
      out.write("      min-width: 150px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .card:hover {\r\n");
      out.write("      transform: scale(1.03);\r\n");
      out.write("      transition: transform 0.2s ease-in-out;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    footer {\r\n");
      out.write("      margin-top: 100px;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"#\">Student Management System</a>\r\n");
      out.write("    </div>\r\n");
      out.write("  </nav>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <div class=\"hero\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <h1>Welcome to the Student Management System!!!!</h1>\r\n");
      out.write("      <p class=\"lead\">Manage Students, Faculty, and Admin.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <div class=\"container text-center mt-5\">\r\n");
      out.write("    <div class=\"btn-group-custom d-flex justify-content-center gap-3\">\r\n");
      out.write("      <a href=\"AdminLogin\" class=\"btn btn-outline-primary\">Admin Login</a>\r\n");
      out.write("      <a href=\"FacultyLogin\" class=\"btn btn-outline-secondary\">Faculty Login</a>\r\n");
      out.write("      <a href=\"StudentLogin\" class=\"btn btn-outline-success\">Student Login</a>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <div class=\"container mt-5\">\r\n");
      out.write("    <div class=\"row g-4\">\r\n");
      out.write("      <div class=\"col-md-4\">\r\n");
      out.write("        <div class=\"card shadow-sm border-0 h-100\">\r\n");
      out.write("          <div class=\"card-body text-center\">\r\n");
      out.write("            <h5 class=\"card-title\">Add New Student</h5>\r\n");
      out.write("            <p class=\"card-text\">Insert new student details into the system.</p>\r\n");
      out.write("            <a href=\"AddStudent.jsp\" class=\"btn btn-success\">Add Student</a>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"col-md-4\">\r\n");
      out.write("        <div class=\"card shadow-sm border-0 h-100\">\r\n");
      out.write("          <div class=\"card-body text-center\">\r\n");
      out.write("            <h5 class=\"card-title\">View All Students</h5>\r\n");
      out.write("            <p class=\"card-text\">Browse all students, edit or delete records.</p>\r\n");
      out.write("            <a href=\"ViewStudentsServlet\" class=\"btn btn-primary\">View Students</a>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"col-md-4\">\r\n");
      out.write("        <div class=\"card shadow-sm border-0 h-100\">\r\n");
      out.write("          <div class=\"card-body text-center\">\r\n");
      out.write("            <h5 class=\"card-title\">About</h5>\r\n");
      out.write("            <p class=\"card-text\">Learn more about this Student Management System.</p>\r\n");
      out.write("            <a href=\"#\" class=\"btn btn-info\" onclick=\"alert('This is a simple Java Servlet + JSP project.')\">Info</a>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("  <footer class=\"footer mt-auto py-4 bg-light text-center\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <span class=\"text-muted\">&copy; 2025 Student Management System. All Rights Reserved.</span>\r\n");
      out.write("    </div>\r\n");
      out.write("  </footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
