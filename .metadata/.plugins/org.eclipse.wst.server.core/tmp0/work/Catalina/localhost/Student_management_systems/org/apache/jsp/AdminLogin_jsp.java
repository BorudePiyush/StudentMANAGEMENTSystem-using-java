/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-09-30 09:12:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class AdminLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- filepath: g:\\java project task\\student management systems\\Student management systems\\src\\main\\webapp\\AdminLogin.jsp -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Admin Login - Student Management System</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Poppins', sans-serif;\r\n");
      out.write("            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            position: relative;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Background Animation === */\r\n");
      out.write("        body::before {\r\n");
      out.write("            content: '';\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            right: 0;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("            background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"grain\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle cx=\"25\" cy=\"25\" r=\"1\" fill=\"%23ffffff\" opacity=\"0.03\"/><circle cx=\"75\" cy=\"75\" r=\"1\" fill=\"%23ffffff\" opacity=\"0.03\"/><circle cx=\"50\" cy=\"10\" r=\"1\" fill=\"%23ffffff\" opacity=\"0.03\"/><circle cx=\"10\" cy=\"90\" r=\"1\" fill=\"%23ffffff\" opacity=\"0.03\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23grain)\"/></svg>');\r\n");
      out.write("            pointer-events: none;\r\n");
      out.write("            z-index: 1;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Floating Elements === */\r\n");
      out.write("        .floating-element {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            background: rgba(255, 255, 255, 0.1);\r\n");
      out.write("            animation: float 6s ease-in-out infinite;\r\n");
      out.write("            z-index: 1;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .floating-element:nth-child(1) {\r\n");
      out.write("            width: 80px;\r\n");
      out.write("            height: 80px;\r\n");
      out.write("            top: 10%;\r\n");
      out.write("            left: 10%;\r\n");
      out.write("            animation-delay: 0s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .floating-element:nth-child(2) {\r\n");
      out.write("            width: 120px;\r\n");
      out.write("            height: 120px;\r\n");
      out.write("            top: 70%;\r\n");
      out.write("            right: 10%;\r\n");
      out.write("            animation-delay: 2s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .floating-element:nth-child(3) {\r\n");
      out.write("            width: 60px;\r\n");
      out.write("            height: 60px;\r\n");
      out.write("            bottom: 20%;\r\n");
      out.write("            left: 15%;\r\n");
      out.write("            animation-delay: 4s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes float {\r\n");
      out.write("            0%, 100% { transform: translateY(0px) rotate(0deg); }\r\n");
      out.write("            33% { transform: translateY(-20px) rotate(120deg); }\r\n");
      out.write("            66% { transform: translateY(-10px) rotate(240deg); }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Animations === */\r\n");
      out.write("        @keyframes slideInUp {\r\n");
      out.write("            from {\r\n");
      out.write("                transform: translateY(100px);\r\n");
      out.write("                opacity: 0;\r\n");
      out.write("            }\r\n");
      out.write("            to {\r\n");
      out.write("                transform: translateY(0);\r\n");
      out.write("                opacity: 1;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes fadeIn {\r\n");
      out.write("            from { opacity: 0; }\r\n");
      out.write("            to { opacity: 1; }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes pulse {\r\n");
      out.write("            0%, 100% { transform: scale(1); }\r\n");
      out.write("            50% { transform: scale(1.05); }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes shake {\r\n");
      out.write("            0%, 100% { transform: translateX(0); }\r\n");
      out.write("            25% { transform: translateX(-5px); }\r\n");
      out.write("            75% { transform: translateX(5px); }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Main Container === */\r\n");
      out.write("        .login-container {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            z-index: 10;\r\n");
      out.write("            animation: slideInUp 0.8s ease-out;\r\n");
      out.write("            max-width: 450px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Login Card === */\r\n");
      out.write("        .login-card {\r\n");
      out.write("            background: rgba(255, 255, 255, 0.95);\r\n");
      out.write("            backdrop-filter: blur(20px);\r\n");
      out.write("            border-radius: 25px;\r\n");
      out.write("            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.2);\r\n");
      out.write("            position: relative;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-card::before {\r\n");
      out.write("            content: '';\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            right: 0;\r\n");
      out.write("            height: 4px;\r\n");
      out.write("            background: linear-gradient(135deg, #667eea, #764ba2);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Header Section === */\r\n");
      out.write("        .login-header {\r\n");
      out.write("            background: linear-gradient(135deg, #f8f9fa, #e9ecef);\r\n");
      out.write("            padding: 40px 30px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            position: relative;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-header::after {\r\n");
      out.write("            content: '';\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            bottom: -10px;\r\n");
      out.write("            left: 50%;\r\n");
      out.write("            transform: translateX(-50%);\r\n");
      out.write("            width: 50px;\r\n");
      out.write("            height: 4px;\r\n");
      out.write("            background: linear-gradient(135deg, #667eea, #764ba2);\r\n");
      out.write("            border-radius: 2px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .admin-avatar {\r\n");
      out.write("            width: 80px;\r\n");
      out.write("            height: 80px;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            background: linear-gradient(135deg, #667eea, #764ba2);\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            margin: 0 auto 20px;\r\n");
      out.write("            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);\r\n");
      out.write("            animation: pulse 2s infinite;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .admin-avatar i {\r\n");
      out.write("            font-size: 2.5rem;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-header h3 {\r\n");
      out.write("            color: #333;\r\n");
      out.write("            font-size: 2rem;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            margin-bottom: 8px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-header p {\r\n");
      out.write("            color: #666;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Form Section === */\r\n");
      out.write("        .login-form {\r\n");
      out.write("            padding: 40px 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-group {\r\n");
      out.write("            margin-bottom: 25px;\r\n");
      out.write("            position: relative;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-label {\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin-bottom: 8px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 8px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .input-group {\r\n");
      out.write("            position: relative;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .input-icon {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            left: 15px;\r\n");
      out.write("            top: 50%;\r\n");
      out.write("            transform: translateY(-50%);\r\n");
      out.write("            color: #667eea;\r\n");
      out.write("            z-index: 10;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-control {\r\n");
      out.write("            border: 2px solid #e9ecef;\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            padding: 15px 20px 15px 50px;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("            background: #f8f9fa;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-control:focus {\r\n");
      out.write("            border-color: #667eea;\r\n");
      out.write("            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);\r\n");
      out.write("            background: white;\r\n");
      out.write("            outline: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-control:focus + .input-icon {\r\n");
      out.write("            color: #667eea;\r\n");
      out.write("            animation: pulse 1s infinite;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-control.is-invalid {\r\n");
      out.write("            border-color: #dc3545;\r\n");
      out.write("            animation: shake 0.5s ease-in-out;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-control.is-valid {\r\n");
      out.write("            border-color: #28a745;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Password Toggle === */\r\n");
      out.write("        .password-toggle {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 15px;\r\n");
      out.write("            top: 50%;\r\n");
      out.write("            transform: translateY(-50%);\r\n");
      out.write("            background: none;\r\n");
      out.write("            border: none;\r\n");
      out.write("            color: #666;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            padding: 5px;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .password-toggle:hover {\r\n");
      out.write("            background: #f8f9fa;\r\n");
      out.write("            color: #667eea;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Remember Me === */\r\n");
      out.write("        .remember-forgot {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-bottom: 25px;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-check {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-check-input {\r\n");
      out.write("            width: 18px;\r\n");
      out.write("            height: 18px;\r\n");
      out.write("            margin-right: 8px;\r\n");
      out.write("            border: 2px solid #dee2e6;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-check-input:checked {\r\n");
      out.write("            background-color: #667eea;\r\n");
      out.write("            border-color: #667eea;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .forgot-password {\r\n");
      out.write("            color: #667eea;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .forgot-password:hover {\r\n");
      out.write("            color: #5a6fd8;\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Login Button === */\r\n");
      out.write("        .btn-login {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            background: linear-gradient(135deg, #667eea, #764ba2);\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 15px 30px;\r\n");
      out.write("            border-radius: 50px;\r\n");
      out.write("            font-size: 1.1rem;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("            position: relative;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-login::before {\r\n");
      out.write("            content: '';\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 50%;\r\n");
      out.write("            left: 50%;\r\n");
      out.write("            width: 0;\r\n");
      out.write("            height: 0;\r\n");
      out.write("            background: rgba(255, 255, 255, 0.2);\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            transition: all 0.4s ease;\r\n");
      out.write("            transform: translate(-50%, -50%);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-login:hover::before {\r\n");
      out.write("            width: 300px;\r\n");
      out.write("            height: 300px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-login:hover {\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("            box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-login:disabled {\r\n");
      out.write("            opacity: 0.7;\r\n");
      out.write("            cursor: not-allowed;\r\n");
      out.write("            transform: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-login .spinner {\r\n");
      out.write("            width: 20px;\r\n");
      out.write("            height: 20px;\r\n");
      out.write("            border: 2px solid transparent;\r\n");
      out.write("            border-top: 2px solid white;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            animation: spin 1s linear infinite;\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-login.loading .spinner {\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-login.loading .btn-text {\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes spin {\r\n");
      out.write("            0% { transform: rotate(0deg); }\r\n");
      out.write("            100% { transform: rotate(360deg); }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Footer === */\r\n");
      out.write("        .login-footer {\r\n");
      out.write("            padding: 20px 30px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            background: #f8f9fa;\r\n");
      out.write("            border-top: 1px solid #e9ecef;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-footer p {\r\n");
      out.write("            color: #666;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-footer a {\r\n");
      out.write("            color: #667eea;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-footer a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Error Message === */\r\n");
      out.write("        .error-message {\r\n");
      out.write("            background: linear-gradient(135deg, #dc3545, #c82333);\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            animation: slideInUp 0.5s ease-out;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Success Message === */\r\n");
      out.write("        .success-message {\r\n");
      out.write("            background: linear-gradient(135deg, #28a745, #20c997);\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            animation: slideInUp 0.5s ease-out;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Responsive Design === */\r\n");
      out.write("        @media (max-width: 576px) {\r\n");
      out.write("            .login-container {\r\n");
      out.write("                margin: 10px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .login-header,\r\n");
      out.write("            .login-form {\r\n");
      out.write("                padding: 30px 20px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .admin-avatar {\r\n");
      out.write("                width: 60px;\r\n");
      out.write("                height: 60px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .admin-avatar i {\r\n");
      out.write("                font-size: 2rem;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .login-header h3 {\r\n");
      out.write("                font-size: 1.6rem;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .remember-forgot {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("                align-items: flex-start;\r\n");
      out.write("                gap: 10px;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Loading Overlay === */\r\n");
      out.write("        .loading-overlay {\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            background: rgba(102, 126, 234, 0.9);\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            z-index: 9999;\r\n");
      out.write("            opacity: 0;\r\n");
      out.write("            visibility: hidden;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .loading-overlay.show {\r\n");
      out.write("            opacity: 1;\r\n");
      out.write("            visibility: visible;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .loading-spinner {\r\n");
      out.write("            width: 50px;\r\n");
      out.write("            height: 50px;\r\n");
      out.write("            border: 3px solid rgba(255, 255, 255, 0.3);\r\n");
      out.write("            border-top: 3px solid white;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            animation: spin 1s linear infinite;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Loading Overlay -->\r\n");
      out.write("    <div class=\"loading-overlay\" id=\"loadingOverlay\">\r\n");
      out.write("        <div class=\"loading-spinner\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Floating Background Elements -->\r\n");
      out.write("    <div class=\"floating-element\"></div>\r\n");
      out.write("    <div class=\"floating-element\"></div>\r\n");
      out.write("    <div class=\"floating-element\"></div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Main Login Container -->\r\n");
      out.write("    <div class=\"login-container\">\r\n");
      out.write("        <div class=\"login-card\">\r\n");
      out.write("            <!-- Header -->\r\n");
      out.write("            <div class=\"login-header\">\r\n");
      out.write("                <div class=\"admin-avatar\">\r\n");
      out.write("                    <i class=\"fas fa-user-shield\"></i>\r\n");
      out.write("                </div>\r\n");
      out.write("                <h3>Admin Login</h3>\r\n");
      out.write("                <p>Access the Student Management System</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Login Form -->\r\n");
      out.write("            <div class=\"login-form\">\r\n");
      out.write("                <!-- Error Message -->\r\n");
      out.write("                ");
 
                String error = request.getParameter("error");
                if (error != null) {
                
      out.write("\r\n");
      out.write("                    <div class=\"error-message\">\r\n");
      out.write("                        <i class=\"fas fa-exclamation-circle\"></i>\r\n");
      out.write("                        ");
 if (error.equals("invalid")) { 
      out.write("\r\n");
      out.write("                            Invalid username or password. Please try again.\r\n");
      out.write("                        ");
 } else if (error.equals("session")) { 
      out.write("\r\n");
      out.write("                            Your session has expired. Please login again.\r\n");
      out.write("                        ");
 } else { 
      out.write("\r\n");
      out.write("                            Login failed. Please check your credentials.\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <!-- Success Message -->\r\n");
      out.write("                ");
 
                String success = request.getParameter("success");
                if (success != null && success.equals("logout")) {
                
      out.write("\r\n");
      out.write("                    <div class=\"success-message\">\r\n");
      out.write("                        <i class=\"fas fa-check-circle\"></i>\r\n");
      out.write("                        You have been successfully logged out.\r\n");
      out.write("                    </div>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <form action=\"AdminLogin\" method=\"post\" id=\"loginForm\">\r\n");
      out.write("                    <!-- Username Field -->\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"adminUsername\" class=\"form-label\">\r\n");
      out.write("                            <i class=\"fas fa-user\"></i> Username\r\n");
      out.write("                        </label>\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("                            <input type=\"text\" \r\n");
      out.write("                                   name=\"username\" \r\n");
      out.write("                                   id=\"adminUsername\" \r\n");
      out.write("                                   class=\"form-control\" \r\n");
      out.write("                                   placeholder=\"Enter your username\"\r\n");
      out.write("                                   required \r\n");
      out.write("                                   autocomplete=\"username\"\r\n");
      out.write("                                   value=\"");
      out.print( request.getParameter("username") != null ? request.getParameter("username") : "" );
      out.write("\">\r\n");
      out.write("                            <i class=\"fas fa-user input-icon\"></i>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <!-- Password Field -->\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"adminPassword\" class=\"form-label\">\r\n");
      out.write("                            <i class=\"fas fa-lock\"></i> Password\r\n");
      out.write("                        </label>\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("                            <input type=\"password\" \r\n");
      out.write("                                   name=\"password\" \r\n");
      out.write("                                   id=\"adminPassword\" \r\n");
      out.write("                                   class=\"form-control\" \r\n");
      out.write("                                   placeholder=\"Enter your password\"\r\n");
      out.write("                                   required \r\n");
      out.write("                                   autocomplete=\"current-password\">\r\n");
      out.write("                            <i class=\"fas fa-lock input-icon\"></i>\r\n");
      out.write("                            <button type=\"button\" class=\"password-toggle\" onclick=\"togglePassword()\">\r\n");
      out.write("                                <i class=\"fas fa-eye\" id=\"passwordToggleIcon\"></i>\r\n");
      out.write("                            </button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <!-- Remember Me & Forgot Password -->\r\n");
      out.write("                    <div class=\"remember-forgot\">\r\n");
      out.write("                        <div class=\"form-check\">\r\n");
      out.write("                            <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberMe\" name=\"rememberMe\">\r\n");
      out.write("                            <label class=\"form-check-label\" for=\"rememberMe\">\r\n");
      out.write("                                Remember me\r\n");
      out.write("                            </label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <a href=\"#\" class=\"forgot-password\" onclick=\"showForgotPassword()\">\r\n");
      out.write("                            Forgot password?\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <!-- Login Button -->\r\n");
      out.write("                    <button type=\"submit\" class=\"btn-login\" id=\"loginBtn\">\r\n");
      out.write("                        <div class=\"spinner\"></div>\r\n");
      out.write("                        <span class=\"btn-text\">\r\n");
      out.write("                            <i class=\"fas fa-sign-in-alt\"></i>\r\n");
      out.write("                            Sign In\r\n");
      out.write("                        </span>\r\n");
      out.write("                    </button>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Footer -->\r\n");
      out.write("            <div class=\"login-footer\">\r\n");
      out.write("                <p>&copy; 2024 Student Management System. All rights reserved.</p>\r\n");
      out.write("                <p>Need help? <a href=\"#\" onclick=\"showHelp()\">Contact Support</a></p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Scripts -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        // Remove loading overlay when page loads\r\n");
      out.write("        window.addEventListener('load', function() {\r\n");
      out.write("            document.getElementById('loadingOverlay').classList.remove('show');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Password toggle functionality\r\n");
      out.write("        function togglePassword() {\r\n");
      out.write("            var passwordInput = document.getElementById('adminPassword');\r\n");
      out.write("            var toggleIcon = document.getElementById('passwordToggleIcon');\r\n");
      out.write("            \r\n");
      out.write("            if (passwordInput.type === 'password') {\r\n");
      out.write("                passwordInput.type = 'text';\r\n");
      out.write("                toggleIcon.classList.remove('fa-eye');\r\n");
      out.write("                toggleIcon.classList.add('fa-eye-slash');\r\n");
      out.write("            } else {\r\n");
      out.write("                passwordInput.type = 'password';\r\n");
      out.write("                toggleIcon.classList.remove('fa-eye-slash');\r\n");
      out.write("                toggleIcon.classList.add('fa-eye');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Form validation and submission\r\n");
      out.write("        document.getElementById('loginForm').addEventListener('submit', function(e) {\r\n");
      out.write("            var username = document.getElementById('adminUsername').value.trim();\r\n");
      out.write("            var password = document.getElementById('adminPassword').value.trim();\r\n");
      out.write("            var loginBtn = document.getElementById('loginBtn');\r\n");
      out.write("            \r\n");
      out.write("            // Basic validation\r\n");
      out.write("            if (username === '' || password === '') {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                showNotification('Please fill in all fields', 'error');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if (username.length < 3) {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                showNotification('Username must be at least 3 characters long', 'error');\r\n");
      out.write("                document.getElementById('adminUsername').classList.add('is-invalid');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if (password.length < 6) {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                showNotification('Password must be at least 6 characters long', 'error');\r\n");
      out.write("                document.getElementById('adminPassword').classList.add('is-invalid');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Show loading state\r\n");
      out.write("            loginBtn.classList.add('loading');\r\n");
      out.write("            loginBtn.disabled = true;\r\n");
      out.write("            \r\n");
      out.write("            // Show loading overlay\r\n");
      out.write("            document.getElementById('loadingOverlay').classList.add('show');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Real-time validation\r\n");
      out.write("        document.getElementById('adminUsername').addEventListener('input', function() {\r\n");
      out.write("            this.classList.remove('is-invalid');\r\n");
      out.write("            if (this.value.trim().length >= 3) {\r\n");
      out.write("                this.classList.add('is-valid');\r\n");
      out.write("            } else {\r\n");
      out.write("                this.classList.remove('is-valid');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        document.getElementById('adminPassword').addEventListener('input', function() {\r\n");
      out.write("            this.classList.remove('is-invalid');\r\n");
      out.write("            if (this.value.trim().length >= 6) {\r\n");
      out.write("                this.classList.add('is-valid');\r\n");
      out.write("            } else {\r\n");
      out.write("                this.classList.remove('is-valid');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Forgot password functionality\r\n");
      out.write("        function showForgotPassword() {\r\n");
      out.write("            showNotification('Please contact your system administrator for password reset', 'info');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Help functionality\r\n");
      out.write("        function showHelp() {\r\n");
      out.write("            showNotification('For technical support, please contact: admin@studentmanagement.com', 'info');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Notification system\r\n");
      out.write("        function showNotification(message, type) {\r\n");
      out.write("            var iconClass = 'info-circle';\r\n");
      out.write("            if (type === 'success') {\r\n");
      out.write("                iconClass = 'check-circle';\r\n");
      out.write("            } else if (type === 'error') {\r\n");
      out.write("                iconClass = 'exclamation-circle';\r\n");
      out.write("            } else if (type === 'warning') {\r\n");
      out.write("                iconClass = 'exclamation-triangle';\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            var notification = document.createElement('div');\r\n");
      out.write("            notification.className = 'alert alert-' + (type === 'error' ? 'danger' : type) + ' alert-dismissible fade show position-fixed';\r\n");
      out.write("            notification.style.cssText = 'top: 20px; right: 20px; z-index: 10000; min-width: 300px;';\r\n");
      out.write("            notification.innerHTML = '<i class=\"fas fa-' + iconClass + ' me-2\"></i>' + \r\n");
      out.write("                                    message + \r\n");
      out.write("                                    '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>';\r\n");
      out.write("            \r\n");
      out.write("            document.body.appendChild(notification);\r\n");
      out.write("            \r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("                if (notification.parentNode) {\r\n");
      out.write("                    notification.remove();\r\n");
      out.write("                }\r\n");
      out.write("            }, 5000);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Keyboard shortcuts\r\n");
      out.write("        document.addEventListener('keydown', function(e) {\r\n");
      out.write("            // Enter key to submit form\r\n");
      out.write("            if (e.key === 'Enter' && (e.target.id === 'adminUsername' || e.target.id === 'adminPassword')) {\r\n");
      out.write("                document.getElementById('loginForm').dispatchEvent(new Event('submit'));\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Escape key to clear form\r\n");
      out.write("            if (e.key === 'Escape') {\r\n");
      out.write("                document.getElementById('loginForm').reset();\r\n");
      out.write("                document.querySelectorAll('.is-valid, .is-invalid').forEach(function(el) {\r\n");
      out.write("                    el.classList.remove('is-valid', 'is-invalid');\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Auto-focus on username field\r\n");
      out.write("        document.getElementById('adminUsername').focus();\r\n");
      out.write("\r\n");
      out.write("        // Remember me functionality (basic localStorage)\r\n");
      out.write("        window.addEventListener('load', function() {\r\n");
      out.write("            var rememberMe = localStorage.getItem('adminRememberMe');\r\n");
      out.write("            var savedUsername = localStorage.getItem('adminUsername');\r\n");
      out.write("            \r\n");
      out.write("            if (rememberMe === 'true' && savedUsername) {\r\n");
      out.write("                document.getElementById('adminUsername').value = savedUsername;\r\n");
      out.write("                document.getElementById('rememberMe').checked = true;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        document.getElementById('loginForm').addEventListener('submit', function() {\r\n");
      out.write("            var rememberMe = document.getElementById('rememberMe').checked;\r\n");
      out.write("            var username = document.getElementById('adminUsername').value;\r\n");
      out.write("            \r\n");
      out.write("            if (rememberMe) {\r\n");
      out.write("                localStorage.setItem('adminRememberMe', 'true');\r\n");
      out.write("                localStorage.setItem('adminUsername', username);\r\n");
      out.write("            } else {\r\n");
      out.write("                localStorage.removeItem('adminRememberMe');\r\n");
      out.write("                localStorage.removeItem('adminUsername');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Prevent form resubmission on page refresh\r\n");
      out.write("        if (window.history.replaceState) {\r\n");
      out.write("            window.history.replaceState(null, null, window.location.href);\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
